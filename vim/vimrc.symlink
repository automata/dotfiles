set nocompatible                       " be vimproved
filetype off                           " required for vundle
set rtp+=~/.vim/bundle/vundle.vim      " set the runtime path to include vundle
call vundle#begin()

" Let Vundle manage Vundle, required
Plugin 'VundleVim/Vundle.vim'
" VIm Airline and themes
Plugin 'bling/vim-airline'
Plugin 'vim-airline/vim-airline-themes'
" Base16 colorscheme
Plugin 'chriskempson/base16-vim'
" Nerd tree
Plugin 'scrooloose/nerdtree'
" Tmuxline
Bundle 'edkolev/tmuxline.vim'
" Git gutter
Plugin 'airblade/vim-gitgutter'
" Nerd commenter
Bundle 'The-NERD-Commenter'
" Multiple cursors
Bundle 'terryma/vim-multiple-cursors'
" CtrlP
Bundle 'ctrlpvim/ctrlp.vim'
" JSX support
Plugin 'mxw/vim-jsx'
" JavaScript support
Plugin 'pangloss/vim-javascript'
" CoffeeScript plugin
Plugin 'kchmck/vim-coffee-script'
" Git
Plugin 'tpope/vim-fugitive'
" Auto insert delimiters
Plugin 'Raimondi/delimitMate'

call vundle#end()                      " Required
filetype plugin indent on              " Required

" Syntax highlight
" ================

syntax on                              " Turn on syntax highlight
syntax enable                          " Enable syntax highlight
let base16colorspace=256               " Access colors in 256 colorspace
set t_Co=256
set background=dark                    " Requested for dark color schemes
"colorscheme solarized
colorscheme base16-tomorrow            " Base16 Tomorrow colorscheme
"colorscheme molokai
"
" General Settings
" ================

set history=1000                       " Store last 1000 commands
set undolevels=1000                    " Store last 1000 actions
set number                             " Toggle line numbers
set relativenumber                     " Show line numbers relative to current line
set encoding=utf-8                     " Standard encoding
set autoread                           " Reload files changed outside vim
set hidden                             " Buffers can exist in the background
set mouse=a                            " Enable mouse in all modes
set scrolloff=3                        " Show lines before/after while scroll
set wildmenu                           " Show menu completion on top of status
set undofile                           " Save undo history btw sessions
set undodir=~/.vim-tmp                 " Save undo files (.un~) on specific dir
set ruler                              " Show lines/columns counters on status bar
let mapleader = ","

" MacOS integration (needs brew install vim)
" =================
set clipboard=unnamed                  " Yanks to system clipboard

" Search
" ======

set hlsearch                           " Highlight search pattern (:noh cleans)
set incsearch                          " Start highlighting search while typing
set showmatch                          " Show match numbers
set ignorecase                         " Search case-insensitive
set smartcase                          " Except when forcing case-sensitivity
nnoremap <CR> :noh<CR><CR>

" No more swap files
" ==================

set noswapfile
set nobackup
set nowritebackup
set backupdir-=.
set backupdir=~/.vim-tmp,~/.tmp,~/tmp,/var/tmp,/tmp
set directory=~/.vim-tmp,~/.tmp,~/tmp,/var/tmp,/tmp

" Indentation
" ===========

set autoindent
set copyindent
set smartindent
set smarttab
set shiftwidth=2                            " Tab is two stops
set softtabstop=2                           " The same
set tabstop=2                               " The same
set expandtab                               " Use spaces, not tabs
set list listchars=tab:▸\ ,trail:·          " Display tabs and trailing spaces
set nowrap                                  " Don't wrap lines
set textwidth=79
"set colorcolumn=80                          " Paint 80th column
set backspace=indent,eol,start              " Backspace through everything

" Split navigation
" ================

nnoremap <C-J> <C-W><C-J>              " Use C-j to go to the window below
nnoremap <C-K> <C-W><C-K>              " Use C-k to go to the window above
nnoremap <C-L> <C-W><C-L>              " Use C-l to go the left window
nnoremap <C-H> <C-W><C-H>              " Use C-h to go the right window

set splitbelow                         " Open new splits below by default
set splitright                         " Open new splits to the right by default

" Nerd tree
" =========
nnoremap <C-e> :NERDTreeToggle<CR>Vim

" Nerd commenter
" ==============
" Add spaces after comment delimiters by default
let g:NERDSpaceDelims = 1

" Use compact syntax for prettified multi-line comments
let g:NERDCompactSexyComs = 1

" Align line-wise comment delimiters flush left instead of following code indentation
let g:NERDDefaultAlign = 'left'

" Allow commenting and inverting empty lines (useful when commenting a region)
let g:NERDCommentEmptyLines = 1

" Enable trimming of trailing whitespace when uncommenting
let g:NERDTrimTrailingWhitespace = 1

" Vim Airline
" ===========

set laststatus=2
let g:airline_theme='distinguished'
let g:airline#extensions#tabline#enabled = 1           " Enable list of buffers on top
let g:airline#extensions#tabline#fnamemod = ':t'       " Show only file name on buffer
let g:airline#extensions#tabline#buffer_idx_mode = 1   " Show buffer number
let g:airline#extensions#tabline#buffers_label = 'b'   " Rename buffers to b
let g:airline#extensions#tabline#tabs_label = 't'      " Rename tabs to t
let g:airline_powerline_fonts = 1
let g:airline_left_sep=''              " Do not use those cute > separators
let g:airline_left_alt_sep=''
let g:airline_right_sep=''
let g:airline_right_alt_sep=''
nmap <leader>1 <Plug>AirlineSelectTab1
nmap <leader>2 <Plug>AirlineSelectTab2
nmap <leader>3 <Plug>AirlineSelectTab3
nmap <leader>4 <Plug>AirlineSelectTab4
nmap <leader>5 <Plug>AirlineSelectTab5
nmap <leader>6 <Plug>AirlineSelectTab6
nmap <leader>7 <Plug>AirlineSelectTab7
nmap <leader>8 <Plug>AirlineSelectTab8
nmap <leader>9 <Plug>AirlineSelectTab9
nmap <leader>- <Plug>AirlineSelectPrevTab
nmap <leader>+ <Plug>AirlineSelectNextTab

" TmuxLine
" ========

" Make it sure we do not use cute > separators
let g:tmuxline_separators = {
    \ 'left' : '',
    \ 'left_alt': '',
    \ 'right' : '',
    \ 'right_alt' : '',
    \ 'space' : ' '}

" Personalize tmux line a bit
let g:tmuxline_preset = {
      \'a'    : '#S',
      \'b'    : '',
      \'c'    : '',
      \'win'  : '#I #W',
      \'cwin' : '#I #W',
      \'x'    : '',
      \'y'    : '#(date)',
      \'z'    : '#H',
      \'options' : {'status-justify' : 'left'}}

" ~~~~~~~~~~~~~~~~~~~~~~~~~
" Language specific configs
" ~~~~~~~~~~~~~~~~~~~~~~~~~

" Markdown
" ========

autocmd BufNewFile,BufReadPost *.md set filetype=markdown

" JSX
" ===
"let g:jsx_ext_required = 0 " Allow JSX in normal JS files
